from random import choice
from re import split

import disnake
from aiohttp import ClientSession
from disnake import Embed
from disnake.ext import commands


class PurchasesCog(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot

    @commands.Cog.listener()
    async def on_ready(self):
        print(f"{self.bot.user} | {__name__}")

    @commands.slash_command(name="–ø–æ–∫—É–ø–∫–∏")
    async def purchases(self, inter: disnake.ApplicationCommandInteraction, –Ω–∏–∫–Ω–µ–π–º: str):
        """–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–∫—É–ø–∫–∏ –ø–æ –Ω–∏–∫–Ω–µ–π–º—É

        Parameters
        ----------
        –Ω–∏–∫–Ω–µ–π–º: –í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –∏–≥—Ä–æ–∫–∞, –ø–æ–∫—É–ø–∫–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å
        """
        nickname = str(–Ω–∏–∫–Ω–µ–π–º)
        nicknames = split(" |, | ,|,", nickname)

        async def request_to_donations(search_nickname) -> object:
            """–í–µ—Ä–Ω—É—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–∏—Å–∫–∞ –ø–æ –Ω–∏–∫–Ω–µ–π–º—É, –≤ –≥—Ä—É–ø–ø–µ —Å –¥–æ–Ω–∞—Ç–∞–º–∏."""
            TOKEN = "25991c5d25991c5d25991c5d6d25e1ebfb2259925991c5d447917c5be90392810a81ccd"
            VERSION = "5.131"
            GROUP_NAME = "breadixdonations"
            GROUP_ID = "-151687251"
            COUNT = "100"
            async with ClientSession() as session:
                async with session.get(
                        f"https://api.vk.com/method/wall.search?access_token={TOKEN}"
                        f"&v={VERSION}"
                        f"&domain="
                        f"{GROUP_NAME}"
                        f"&owner_id={GROUP_ID}"
                        f"&query={search_nickname}"
                        f"&owners_only=1&count={COUNT}") as r:
                    if r.status == 200:
                        js = await r.json()
                        return js

        def get_server(text) -> str:
            """–í–µ—Ä–Ω—É—Ç—å —Å–µ—Ä–≤–µ—Ä –∏–∑ —Ç–µ–∫—Å—Ç–∞"""
            servers = ("bedwars", "skywars", "murder mystery", "murdermystery", "survival", "duels")
            numbers = ("‚Ññ1", "‚Ññ2", "‚Ññ3")
            server_output = {
                "bedwars": "BW",
                "skywars": "SW",
                "murder mystery": "MM",
                "murdermystery": "MM",
                "survival": "surv",
                "duels": "duels"
            }
            for server in servers:
                if int(text.find(server)) != -1:
                    for number in numbers:
                        if text.find(number) != -1:
                            server = f"{server_output[server]}{number[1:]}"
                            return server

        def get_purchase(text) -> str:
            """–í–µ—Ä–Ω—É—Ç—å –ø–æ–∫—É–ø–∫—É –∏–∑ —Ç–µ–∫—Å—Ç–∞"""
            purchases = (
                "fly", "vip+", "vip", "mvp++", "mvp+", "mvp", "creative+", "creative", "—Ä–∞–∑–±–∞–Ω", "1000 –º–æ–Ω–µ—Ç",
                "5000 –º–æ–Ω–µ—Ç", "10000 –º–æ–Ω–µ—Ç", "–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è")

            for purchase in purchases:
                if int(text.find(purchase.lower())) != -1:
                    return purchase

        def get_nickname(text) -> str:
            """–í–µ—Ä–Ω—É—Ç—å –Ω–∏–∫–Ω–µ–π–º –∏–∑ —Ç–µ–∫—Å—Ç–∞"""
            text = text[6:]

            if int(text.find("–∫—É–ø–∏–ª")) != -1:
                return text[:int(text.find("–∫—É–ø–∏–ª")) - 1]

            if int(text.find("–ø—Ä–∏–æ–±—Ä–µ–ª")) != -1:
                return text[:int(text.find("–ø—Ä–∏–æ–±—Ä–µ–ª")) - 1]

        def get_url(response: object, i: int) -> str:
            """–í–µ—Ä–Ω—É—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç –í–ö–æ–Ω—Ç–∞–∫—Ç–µ"""
            owner_id = str(response["response"]["items"][i]["owner_id"])
            url_id = str(response["response"]["items"][i]["id"])
            return "https://vk.com/wall" + owner_id + "_" + url_id

        def get_name(text) -> str:
            """"–í–µ—Ä–Ω—É—Ç—å –∏–∑–º–µ–Ω—ë–Ω–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º"""
            return text.replace("_", "\\_")

        embeds = []

        async def add_embed(name):
            """–î–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–æ—á–∫—É –ø–æ—Å—Ç–æ–≤ –ø–æ –Ω–∏–∫–Ω–µ–π–º—É."""
            response = await request_to_donations(name)
            post_count = response["response"]["count"]

            # –°–æ—Å—Ç–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤—Å–µ—Ö –ø–æ–∫—É–ø–æ–∫
            post_text = ""
            for i in range(post_count):
                text = response["response"]["items"][i]["text"].lower()
                post_text += f"`{i + 1}.` [{get_nickname(text)} | {get_server(text)} | " \
                             f"{get_purchase(text)}]({get_url(response, i)})\n "

            # –°–æ—Å—Ç–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç.
            if post_count == 0:
                title = f":shopping_bags: {get_name(name)}"
                value = choice(("`–ù–µ—Ç –ø–æ–∫—É–ø–æ–∫ :(`", "`–¢—É—Ç –ø—É—Å—Ç–æ–≤–∞—Ç–æ..`", "`–ú–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –∏ –∫—É–ø–∏—Ç—å!`"))
            else:
                title = f":shopping_bags: {get_name(name)} ({post_count})"
                value = f"{post_text}"

            embeds.append(Embed(title=title, description=value))

        # –î–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–∏–∫–Ω–µ–π–º–∞ –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ—á–∫—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –ø–æ–∏—Å–∫–∞ –ø–æ–∫—É–ø–æ–∫
        for nickname in nicknames:
            await add_embed(nickname)

        store_button = disnake.ui.View()
        store_button.add_item(
            disnake.ui.Button(
                emoji="üõçÔ∏è",
                label="–ö—É–ø–∏—Ç—å –¥–æ–Ω–∞—Ç –º–æ–∂–Ω–æ –∑–¥–µ—Å—å!",
                style=disnake.ButtonStyle.url,
                url="https://shop.breadixpe.ru/"
            )
        )

        await inter.response.send_message(embeds=embeds, ephemeral=True, view=store_button)


def setup(bot):
    bot.add_cog(PurchasesCog(bot))
    print(f" + {__name__}")


def teardown(bot):
    print(f" - {__name__}")
