from os import environ
from random import choice
from re import split

import disnake
from aiohttp import ClientSession
from disnake import Embed, UserCommandInteraction, ApplicationCommandInteraction, MessageCommandInteraction
from disnake.ext import commands


class PurchasesCog(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot

    @commands.Cog.listener()
    async def on_ready(self):
        print(f"{self.bot.user} | {__name__}")

    async def get_purchases(self, inter: ApplicationCommandInteraction, nicknames: str) -> Embed:
        """–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–∫—É–ø–∫–∏ –ø–æ –Ω–∏–∫–Ω–µ–π–º—É

        Parameters
        ----------
        –Ω–∏–∫–Ω–µ–π–º: –í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –∏–≥—Ä–æ–∫–∞, –ø–æ–∫—É–ø–∫–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å
        """
        nicknames = split(" |, | ,|,", str(nicknames))

        async def request_to_donations(search_nickname: str) -> object:
            """–í–µ—Ä–Ω—É—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–∏—Å–∫–∞ –ø–æ –Ω–∏–∫–Ω–µ–π–º—É, –≤ –≥—Ä—É–ø–ø–µ —Å –¥–æ–Ω–∞—Ç–∞–º–∏."""
            TOKEN = environ.get('VK_TOKEN')
            VERSION = "5.131"
            GROUP_NAME = "breadixdonations"
            GROUP_ID=  "-151687251"  # id –≥—Ä—É–ø–ø—ã —Å –¥–æ–Ω–∞—Ç–∞–º–∏
            COUNT = "100"  # –í—Å–µ–≥–æ 100 –ø–æ—Å—Ç–æ–≤. –û–∂–∏–¥–∞–µ—Ç—Å—è —á—Ç–æ –±–æ–ª—å—à–µ 100 –¥–æ–Ω–∞—Ç–æ–≤ –Ω–∞ –Ω–∏–∫–µ –Ω–µ –±—É–¥–µ—Ç.
            async with ClientSession() as session:
                async with session.get(
                        f"https://api.vk.com/method/wall.search?"
                        f"access_token={TOKEN}"
                        f"&v={VERSION}"
                        f"&domain={GROUP_NAME}"
                        f"&owner_id={GROUP_ID}"
                        f"&query={search_nickname}"
                        f"&owners_only=1"
                        f"&count={COUNT}") as r:
                    if r.status == 200:
                        js = await r.json()
                        return js

        def get_server(text: str) -> str:
            """–í–µ—Ä–Ω—É—Ç—å —Å–µ—Ä–≤–µ—Ä –∏–∑ —Ç–µ–∫—Å—Ç–∞"""
            servers = ("bedwars", "skywars", "murder mystery", "murdermystery", "survival", "duels")
            numbers = ("‚Ññ1", "‚Ññ2", "‚Ññ3")
            server_output = {
                "bedwars": "BW",
                "skywars": "SW",
                "murder mystery": "MM",
                "murdermystery": "MM",
                "survival": "surv",
                "duels": "duels"
            }
            for server in servers:
                if int(text.find(server)) != -1:
                    for number in numbers:
                        if text.find(number) != -1:
                            server = f"{server_output[server]}{number[1:]}"
                            return server

        def get_purchase(text: str) -> str:
            """–í–µ—Ä–Ω—É—Ç—å –ø–æ–∫—É–ø–∫—É –∏–∑ —Ç–µ–∫—Å—Ç–∞"""
            purchases = (
                "fly", "vip+", "vip", "mvp++", "mvp+", "mvp", "creative+", "creative", "—Ä–∞–∑–±–∞–Ω", "1000 –º–æ–Ω–µ—Ç",
                "5000 –º–æ–Ω–µ—Ç", "10000 –º–æ–Ω–µ—Ç", "–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è")

            for purchase in purchases:
                if int(text.find(purchase.lower())) != -1:
                    return purchase

        def get_nickname(text: str) -> str:
            """–í–µ—Ä–Ω—É—Ç—å –Ω–∏–∫–Ω–µ–π–º –∏–∑ —Ç–µ–∫—Å—Ç–∞"""
            text = text[6:]

            if int(text.find("–∫—É–ø–∏–ª")) != -1:
                return text[:int(text.find("–∫—É–ø–∏–ª")) - 1].replace("_", "\_")

            if int(text.find("–ø—Ä–∏–æ–±—Ä–µ–ª")) != -1:
                return text[:int(text.find("–ø—Ä–∏–æ–±—Ä–µ–ª")) - 1].replace("_", "\_")

        def get_url(response: object, i: int) -> str:
            """–í–µ—Ä–Ω—É—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç –í–ö–æ–Ω—Ç–∞–∫—Ç–µ"""
            owner_id = str(response["response"]["items"][i]["owner_id"])
            url_id = str(response["response"]["items"][i]["id"])
            return "https://vk.com/wall" + owner_id + "_" + url_id

        def get_name(text: str) -> str:
            """"–í–µ—Ä–Ω—É—Ç—å –∏–∑–º–µ–Ω—ë–Ω–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º"""
            return text.replace("_", "\_")

        def get_price(text: str) -> int:
            purchase_price = {
                "vip+": 369,
                "vip": 79,
                "vip surv": 229,
                "mvp+": 319,
                "mvp++": 619,
                "mvp": 159,
                "fly": 39,
                "creative+": 129,
                "creative": 619,
                "—Ä–∞–∑–±–∞–Ω": 240,
                "1000 –º–æ–Ω–µ—Ç": 49,
                "5000 –º–æ–Ω–µ—Ç": 159,
                "10000 –º–æ–Ω–µ—Ç": 249,
                "–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è": 29
            }
            purchases = (
                "fly", "vip+", "vip", "mvp++", "mvp+", "mvp", "creative+", "creative", "—Ä–∞–∑–±–∞–Ω", "1000 –º–æ–Ω–µ—Ç",
                "5000 –º–æ–Ω–µ—Ç", "10000 –º–æ–Ω–µ—Ç", "–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è")
            servers = ("BW", "SW", "MM", "MM", "surv", "duels")

            for purchase in purchases:
                if int(text.find(purchase.lower())) != -1:
                    if purchase != "vip":
                        return purchase_price[purchase]
                    else:
                        if int(text.find("Survival")) != -1:
                            return purchase_price[purchase]
                        else:
                            return purchase_price[f"{purchase} surv"]

        embeds = []

        async def add_embed(name: str):
            """–î–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–æ—á–∫—É –ø–æ—Å—Ç–æ–≤ –ø–æ –Ω–∏–∫–Ω–µ–π–º—É."""
            response = await request_to_donations(name)
            post_count = response["response"]["count"]

            # –°–æ—Å—Ç–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤—Å–µ—Ö –ø–æ–∫—É–ø–æ–∫
            price = 0
            post_text = ""
            for i in range(post_count):
                text = response["response"]["items"][i]["text"].lower()
                a = f"`{i + 1}.` [{get_nickname(text)} | {get_server(text)} | " \
                    f"{get_purchase(text)}]({get_url(response, i)})\n "
                post_text += a
                price += get_price(a)

            # –°–æ—Å—Ç–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç.
            if post_count == 0:
                title = f":shopping_bags: {get_name(name)}"
                value = choice(("`–ù–µ—Ç –ø–æ–∫—É–ø–æ–∫ :(`", "`–¢—É—Ç –ø—É—Å—Ç–æ–≤–∞—Ç–æ..`", "`–ú–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –∏ –∫—É–ø–∏—Ç—å!`"))
            else:
                title = f":shopping_bags: {get_name(name)} ({post_count})"
                value = f"{post_text}"

            embed = Embed(
                title=title, description=value
            ).set_footer(
                text=f"üí∏ {round(price - price * 0.2)} - {price} ‚ÇΩ"
            )

            embeds.append(embed)

        # –î–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–∏–∫–Ω–µ–π–º–∞ –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ—á–∫—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –ø–æ–∏—Å–∫–∞ –ø–æ–∫—É–ø–æ–∫
        for nickname in nicknames:
            await add_embed(nickname)

        return embeds

    @commands.slash_command(name="–ø–æ–∫—É–ø–∫–∏")
    async def purchases(self, inter: ApplicationCommandInteraction, –Ω–∏–∫–Ω–µ–π–º: str):
        """–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–∫—É–ø–∫–∏ –ø–æ –Ω–∏–∫–Ω–µ–π–º—É

        Parameters
        ----------
        –Ω–∏–∫–Ω–µ–π–º: –í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –∏–≥—Ä–æ–∫–∞, –ø–æ–∫—É–ø–∫–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å
        """
        store_button = disnake.ui.View().add_item(
            disnake.ui.Button(
                emoji="üõçÔ∏è",
                label="–ö—É–ø–∏—Ç—å –¥–æ–Ω–∞—Ç –º–æ–∂–Ω–æ –∑–¥–µ—Å—å!",
                style=disnake.ButtonStyle.url,
                url="https://shop.breadixpe.ru/"
            )
        )
        embeds = await self.get_purchases(inter=inter, nicknames=–Ω–∏–∫–Ω–µ–π–º)
        await inter.response.send_message(embeds=embeds, ephemeral=True, view=store_button)

    @commands.user_command(name="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–∫—É–ø–∫–∏")
    async def avatar(self, inter: UserCommandInteraction, user: disnake.User):
        store_button = disnake.ui.View().add_item(
            disnake.ui.Button(
                emoji="üõçÔ∏è",
                label="–ö—É–ø–∏—Ç—å –¥–æ–Ω–∞—Ç –º–æ–∂–Ω–æ –∑–¥–µ—Å—å!",
                style=disnake.ButtonStyle.url,
                url="https://shop.breadixpe.ru/"
            )
        )
        embeds = await self.get_purchases(inter=inter, nicknames=f"{user.display_name}, {user.name}")
        await inter.response.send_message(embeds=embeds, ephemeral=True, view=store_button)

    @commands.message_command(name="–£–∑–Ω–∞—Ç—å –ø–æ–∫—É–ø–∫–∏")
    async def reverse(self, inter: MessageCommandInteraction, message: disnake.Message):
        store_button = disnake.ui.View().add_item(
            disnake.ui.Button(
                emoji="üõçÔ∏è",
                label="–ö—É–ø–∏—Ç—å –¥–æ–Ω–∞—Ç –º–æ–∂–Ω–æ –∑–¥–µ—Å—å!",
                style=disnake.ButtonStyle.url,
                url="https://shop.breadixpe.ru/"
            )
        )
        embeds = await self.get_purchases(inter=inter,
                                          nicknames=f"{message.author.display_name}, {message.author.name}")
        await inter.response.send_message(embeds=embeds, ephemeral=True, view=store_button)


def setup(bot):
    bot.add_cog(PurchasesCog(bot))
    print(f" + {__name__}")


def teardown(bot):
    print(f" - {__name__}")
