from os import environ
from re import split

from aiohttp import ClientSession
from disnake import Embed, UserCommandInteraction, ApplicationCommandInteraction, MessageCommandInteraction, \
    ButtonStyle, Message, User
from disnake.ext import commands
from disnake.ui import View, Button


async def create_purchase_embed(nicknames: list[str]) -> list[Embed]:
    """–í–µ—Ä–Ω—É—Ç—å –µ–º–±–µ–¥—ã –ø–æ–∫—É–ø–æ–∫ –ø–æ –Ω–∏–∫–Ω–µ–π–º–∞–º"""

    async def request_to_vk_donations(nickname: str) -> object:
        """–í–µ—Ä–Ω—É—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–∏—Å–∫–∞ –ø–æ –Ω–∏–∫–Ω–µ–π–º—É, –≤ –≥—Ä—É–ø–ø–µ —Å –¥–æ–Ω–∞—Ç–∞–º–∏."""
        TOKEN = environ.get('VK_TOKEN')
        VERSION = "5.131"
        GROUP_NAME = "breadixdonations"
        GROUP_ID = "-151687251"  # id –≥—Ä—É–ø–ø—ã —Å –¥–æ–Ω–∞—Ç–∞–º–∏
        COUNT = "100"  # –ú–∞–∫—Å–∏–º—É–º 100 –ø–æ—Å—Ç–æ–≤ –∑–∞ –æ–¥–∏–Ω –∑–∞–ø—Ä–æ—Å.
        async with ClientSession() as session:
            async with session.get(
                    f"https://api.vk.com/method/wall.search?"
                    f"access_token={TOKEN}"
                    f"&v={VERSION}"
                    f"&domain={GROUP_NAME}"
                    f"&owner_id={GROUP_ID}"
                    f"&query={nickname}"
                    f"&owners_only=1"
                    f"&count={COUNT}"
            ) as request:
                if request.status == 200:
                    js = await request.json()
                    return js

    def get_server_name(text: str) -> str:
        """–í–µ—Ä–Ω—É—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä –∏–∑ —Ç–µ–∫—Å—Ç–∞"""
        numbers = ("‚Ññ0, ‚Ññ1", "‚Ññ2", "‚Ññ3")
        servers = {
            "bedwars": "BW",
            "skywars": "SW",
            "murder mystery": "MM",
            "murdermystery": "MM",
            "survival": "SU",
            "duels": "DU"
        }
        # –ü–æ–ª—É—á–∞–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –∏–∑ —Ç–µ–∫—Å—Ç–∞ –∏ —Å–ø–∏—Å–∫–∞.
        server_name = set(servers.keys()) & set(text.lower().split())
        number = set(numbers) & set(text.lower().split())

        print(servers["".join(server_name)] + "".join(number)[1:])

        return servers["".join(server_name)] + "".join(number)[1:]
    def get_url(response: object, i: int) -> str:
        """–í–µ—Ä–Ω—É—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç –í–ö–æ–Ω—Ç–∞–∫—Ç–µ"""
        owner_id = str(response["response"]["items"][i]["owner_id"])
        url_id = str(response["response"]["items"][i]["id"])
        return "https://vk.com/wall" + owner_id + "_" + url_id

    def get_price_purchase(text: str) -> int:
        price_purchase = {
            "vip+": 369,
            "vip": 79,
            "vip survival": 229,
            "mvp+": 319,
            "mvp++": 619,
            "mvp": 159,
            "fly": 39,
            "creative+": 619,
            "creative": 129,
            "—Ä–∞–∑–±–∞–Ω": 240,
            "1000 –º–æ–Ω–µ—Ç": 49,
            "5000 –º–æ–Ω–µ—Ç": 159,
            "10000 –º–æ–Ω–µ—Ç": 249,
            "–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è": 29
        }
        purchases = (
            "fly", "vip+", "vip", "mvp++", "mvp+", "mvp", "creative+", "creative", "—Ä–∞–∑–±–∞–Ω", "1000 –º–æ–Ω–µ—Ç",
            "5000 –º–æ–Ω–µ—Ç", "10000 –º–æ–Ω–µ—Ç", "–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è")

        # –ø–æ–ª—É—á–∞–µ–º –ø–æ–∫—É–ø–∫—É –∏–∑ —Ç–µ–∫—Å—Ç–∞, —Å–æ–∑–¥–∞–≤–∞—è —Å–ø–∏—Å–æ–∫ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –∏ —Å–≤–µ—Ä—è—è —Å–ø–∏—Å–∫–∏.
        purchase = set(purchases) & set(text.lower().split())

        if set("Survival") & set(text.lower().split()):
            # –ï—Å–ª–∏ –ø–æ–∫—É–ø–∫–∞ –Ω–∞ —Å—é—Ä–≤–∞
            return price_purchase["".join(purchase) + " survival"]
        else:
            # –ï—Å–ª–∏ –ø–æ–∫—É–ø–∫–∞ –Ω–µ –Ω–∞ —Å—é—Ä–≤–∞
            return price_purchase["".join(purchase)]

    purchases_embeds = []

    # –î–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–∏–∫–Ω–µ–π–º–∞ —Å–æ–∑–¥–∞—ë–º –µ–º–±–µ–¥ —Å –ø–æ–∫—É–ø–æ–∫–∞–º–∏
    for nickname in nicknames:
        response = await request_to_vk_donations(nickname)
        post_count = response["response"]["count"]
        full_cost = 0
        post_text = ""

        # –°–æ—Å—Ç–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤—Å–µ—Ö –ø–æ–∫—É–ø–æ–∫
        for post_number in range(post_count):
            text = response["response"]["items"][post_number]["text"].lower()

            words = [
                "–∏–≥—Ä–æ–∫ ", "–ø—Ä–∏–æ–±—Ä–µ–ª ", "–∫—É–ø–∏–ª ","–Ω–∞ ", "–ø—Ä–∏–≤–∏–ª–µ–≥–∏—é ", "–∫—É–ø–∏—Ç—å –¥–æ–Ω–∞—Ç ‚Äî shop.breadixpe.ru", "!", "–Ω–∞ "
                "‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî", "–¥–æ–Ω–∞—Ç –º–æ–∂–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ shop.breadixpe.ru", "‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî",
                f"{nickname} "]
            servers = {
                "bedwars": "BW",
                "skywars": "SW",
                "murder mystery": "MM",
                "murdermystery": "MM",
                "survival": "SU",
                "duels": "DU"
            }

            for i in words:
                text = text.replace(i, "")
            text = text.rstrip()

            server_name = "".join(set(servers.keys()) & set(text.split()))
            text = text.replace(server_name, servers[server_name])

            post_text += f"`{post_number + 1}.` [{text}]({get_url(response, post_number)}) \n"
            full_cost += get_price_purchase(text)

        if post_count == 0:
            title = f":shopping_bags: {nickname}"
            value = "–ù–µ—Ç –ø–æ–∫—É–ø–æ–∫."
        else:
            title = f":shopping_bags: {nickname} ({post_count})"
            value = f"{post_text}"

        # –°–æ–∑–¥–∞—ë–º –µ–º–±–µ–¥
        embed = Embed(title=title, description=value)
        embed.set_footer(text=f"–û—Ç {round(full_cost / 2)} –¥–æ {full_cost} ‚ÇΩ")

        # –î–æ–±–∞–≤–ª—è–µ–º –∫ –µ–º–±–µ–¥–∞–º
        purchases_embeds.append(embed)

    return purchases_embeds


class PurchasesCog(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot

    @commands.Cog.listener()
    async def on_ready(self):
        print(f"{self.bot.user} | {__name__}")
        await create_purchase_embed(nicknames=["double_master"])

    @commands.slash_command(name="–ø–æ–∫—É–ø–∫–∏")
    async def purchases_slash_command(self, inter: ApplicationCommandInteraction, –Ω–∏–∫–Ω–µ–π–º: str):
        """–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–∫—É–ø–∫–∏ –ø–æ –Ω–∏–∫–Ω–µ–π–º—É

        Parameters
        ----------
        –Ω–∏–∫–Ω–µ–π–º: –í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –∏–≥—Ä–æ–∫–∞, –ø–æ–∫—É–ø–∫–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å
        """
        store_button = View().add_item(Button(
            emoji="üõçÔ∏è",
            label="–°–∞–π—Ç –∞–≤—Ç–æ-–¥–æ–Ω–∞—Ç–∞",
            style=ButtonStyle.url,
            url="https://shop.breadixpe.ru/"
        ))
        embeds = await create_purchase_embed(nicknames=split(" |, | ,|,", –Ω–∏–∫–Ω–µ–π–º))
        await inter.response.send_message(embeds=embeds, ephemeral=True, view=store_button)

    @commands.message_command(name="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–∫—É–ø–∫–∏")
    async def purchases_message_command(self, inter: MessageCommandInteraction, message: Message):
        embeds = await create_purchase_embed(nicknames=[message.author.display_name, message.author.name])
        await inter.response.send_message(embeds=embeds, ephemeral=True)

    @commands.user_command(name="–£–∑–Ω–∞—Ç—å –ø–æ–∫—É–ø–∫–∏")
    async def purchases_user_command(self, inter: UserCommandInteraction, user: User):
        embeds = await create_purchase_embed(nicknames=[user.display_name, user.name])
        await inter.response.send_message(embeds=embeds, ephemeral=True)


def setup(bot):
    bot.add_cog(PurchasesCog(bot))
    print(f" + {__name__}")


def teardown(bot):
    print(f" - {__name__}")
