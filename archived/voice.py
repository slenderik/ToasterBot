# –≤—ã–∫–ª—é—á–∏—Ç—å NSFW, –æ—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç –≤–æ–π—Å–∞, —É–¥–∞–ª–∏—Ç—å –∏ —Å–æ–∑–¥–∞—Ç—å –≤–æ–π—Å, –æ—Ç–∫–ª—é—á–∏—Ç—å –∏–∑ –∞—Ñ–∫
from asyncio import sleep
from random import choice

import disnake
from disnake.utils import get
from disnake.ext import commands
from disnake import SelectOption, Embed
from disnake.ui import Button, Select
from utils.config import afk_channel_id

custom_rooms = {}


async def get_channel(guild: object, user_id: int) -> object | None:
    """–í–µ—Ä–Ω—É—Ç—å –∫–∞–Ω–∞–ª –∞–≤—Ç–æ—Ä–∞."""
    return get(guild.voice_channels, id=custom_rooms[user_id]) if custom_rooms.get(user_id, None) is not None else None


# –∫—É–ª–¥–∞—É–Ω—ã
cooldowns = {}
cooldown_create = {}
cooldown_name = {}
voice_create_id = 1031152112236761140


class VoiceView(disnake.ui.View):

    def __init__(self):
        super().__init__(timeout=None)

    async def interaction_check(self, inter: disnake.MessageInteraction) -> bool:
        channel = await get_channel(inter.guild, inter.user.id)

        if channel is None:  # —á–µ–ª–æ–≤–µ–∫ –Ω–µ —Å–æ–∑–¥–∞–≤–∞–ª –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª
            await inter.response.send_message(
                f"`1` –°–æ–∑–¥–∞–π—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–π, –∑–∞–π–¥—è –≤ <#{voice_create_id}>. \n"
                f"`2` –í–∞–º —Å–æ–∑–¥–∞–¥—É—Ç –∏ –ø–µ—Ä–µ–º–µ—Å—Ç—è—Ç –≤–∞—Å. \n"
                f"`3` –¢–æ–ª—å–∫–æ –Ω–∞—Ö–æ–¥—è—Å—å –≤ –Ω—ë–º, –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ!", ephemeral=True)
            return False
        elif channel is not None and inter.user.voice is not None:  # —Å–æ–∑–¥–∞–≤–∞–ª –∏ –≤ –≤–æ–π—Å–µ

            if channel.id == inter.user.voice.channel.id:  # –≤ —Å–≤–æ—ë–º –≤–æ–π—Å–µ
                return True

            else:  # –Ω–µ –≤ —Å–≤–æ—ë–º –≤–æ–π—Å–µ
                await inter.response.send_message(
                    f"–ó–∞–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª {channel.mention}, —á—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –µ–≥–æ!",
                    ephemeral=True)
                return False

        elif channel is not None and inter.user.voice is None:  # —Å–æ–∑–¥–∞–≤–∞–ª –Ω–æ –Ω–µ –≤–æ–π—Å–µ
            await inter.response.send_message(
                f"–ó–∞–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª {channel.mention}, —á—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –µ–≥–æ!",
                ephemeral=True)
            return False

    @disnake.ui.button(custom_id="voice_view:name", label="–ù–∞–∑–≤–∞–Ω–∏–µ", style=disnake.ButtonStyle.blurple)
    async def name(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        channel = await get_channel(inter.guild, inter.user.id)
        embed = disnake.Embed(title=f"–ù–∞–∑–≤–∞–Ω–∏–µ: {channel.name}")
        options = [
            SelectOption(label="SkyWars ‚Ññ1", description="–ï—Å–ª–∏ —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å —Ç—É—Ç –∏–≥—Ä–∞—Ç—å", emoji="üü¶"),
            SelectOption(label="SkyWars ‚Ññ2", description="–ï—Å–ª–∏ —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å —Ç—É—Ç –∏–≥—Ä–∞—Ç—å", emoji="üü¶"),
            SelectOption(label="SkyWars ‚Ññ3", description="–ï—Å–ª–∏ —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å —Ç—É—Ç –∏–≥—Ä–∞—Ç—å", emoji="üü¶"),
            SelectOption(label="BedWars ‚Ññ1", emoji="üü•"),
            SelectOption(label="BedWars ‚Ññ2", emoji="üü•"),
            SelectOption(label="BedWars ‚Ññ3", emoji="üü•"),
            SelectOption(label="Duels ‚Ññ1", emoji="üü™"),
            SelectOption(label="Murder Mystery ‚Ññ1", emoji="üü®"),
            SelectOption(label="Murder Mystery ‚Ññ2", emoji="üü®"),
            SelectOption(label="Survival ‚Ññ1", emoji="üü©")
        ]
        components = [
            Button(label="–û–±—â–µ–Ω–∏–µ", custom_id="voice_name_talk"),
            Button(label="–ú—É–∑—ã–∫–∞", custom_id="voice_name_music"),
            Button(label="–û—Ñ—Ñ—Ç–æ–ø", custom_id="voice_name_offtop"),
            Select(placeholder="–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —Å–µ—Ä–≤–µ—Ä!", max_values=1, row=1, options=options,
                   custom_id="voice_name_server"),
            Button(label="–í–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ", custom_id="voice_name_custom_name"),
        ]
        await inter.response.send_message(embed=embed, components=components, ephemeral=True)

    @disnake.ui.button(custom_id="voice_view:limit", label="–õ–∏–º–∏—Ç", style=disnake.ButtonStyle.blurple)
    async def limit(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        await inter.response.send_message(view=LimitView(), ephemeral=True)


class VoiceCog(commands.Cog):
    """
    –í—Å—ë —á—Ç–æ —Å–≤—è–∑–∞–Ω–æ —Å –≤–æ–π—Å–∞–º–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!
    –§: –≤—ã–∫–ª—é—á–∏—Ç—å NSFW, –æ—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç –≤–æ–π—Å–∞, —É–¥–∞–ª–∏—Ç—å –∏ —Å–æ–∑–¥–∞—Ç—å –≤–æ–π—Å
    """

    def __init__(self, bot: commands.Bot):
        self.bot = bot
        self.views_added = False

    @commands.Cog.listener()
    async def on_ready(self):
        if not self.views_added:
            self.bot.add_view(VoiceView())
            self.bot.views_added = True

        print(f"{self.bot.user} | {__name__}")

    @commands.command(name="–≥—Å")
    async def voice_settings(self, ctx: commands.Context):
        embed = disnake.Embed(
            title="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏—á–Ω—ã–º –∫–∞–Ω–∞–ª–æ–º!",
            description="–£ –Ω–∞—Å –µ—Å—Ç—å –∫–∞–Ω–∞–ª—ã. –û–Ω–∏ –∫–∞–Ω–∞–ª—ã."
                        "[ **–ù–∞–∑–≤–∞–Ω–∏–µ** ] –∫–∞–Ω–∞–ª–∞. –°–ø–∞—Å–∏–±–æ —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ! \n"
                        "[ **–õ–∏–º–∏—Ç** ] —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–∞–Ω–∞–ª–µ. –ù–µ –≤—ã–∫–∏–¥—ã–≤–∞–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.\n"
        ).set_footer(text="–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–Ω–∞–ª!")
        await ctx.send(embed=embed, view=VoiceView())

    # TODO —Ç—É–∫-—Ç—É–∫, –∫ –≤–∞–º —Ö–æ—á–µ—Ç –∑–∞–π—Ç–∏ @—á–µ–ª–æ–≤–∫–µ–∫

    @commands.Cog.listener()
    async def on_voice_state_update(self, member: disnake.Member, before: disnake.VoiceChannel,
                                    after: disnake.VoiceChannel):
        """"–°–æ–∑–¥–∞—Ç—å, —É–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª"""
        # –ï—Å–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫ –∑–∞—à—ë–ª/–ø–µ—Ä–µ—à—ë–ª/–≤—ã—à–µ–ª.
        # before.channel = None - –∑–∞—à–µ–ª –≤ –≥—Å —Å–µ—Ä–≤–µ—Ä–∞
        # after.channel = None - –≤—ã—à–µ–ª —Å –≥—Å —Å–µ—Ä–≤–µ—Ä–∞

        # –≤—ã–∫–ª—é—á–∏—Ç—å NSFW
        if before.channel and before.channel.voice_states == {} and before.channel.is_nsfw():
            try:
                await before.channel.edit(nsfw=False, reason="–ö–∞–Ω–∞–ª –ø—É—Å—Ç–æ–π, –∑–∞—á–µ–º –µ–≥–æ –æ—Å—Ç–∞–≤–ª—è—Ç—å —Å –º–∞—Ç–æ–º?")
            except Exception as e:
                print(f"{__name__} Error: {e}")

        # –æ—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç
        if before.channel and before.channel.voice_states == {} and before.channel.id not in custom_rooms \
                and before.channel.id != voice_create_id:
            try:
                await before.channel.purge(limit=None)
            except Exception as e:
                print(f"{__name__} Error: {e}")

        # –æ—Ç–∫–ª—é—á–∏—Ç—å –æ—Ç–æ—à–µ–¥—à–∏—Ö
        if after.channel is not None and after.channel.id == afk_channel_id:
            await after.channel.send("–≠–π, –ø–æ—Ö–æ–∂–µ –≤—ã –Ω–µ–º–Ω–æ–≥–æ –æ—Ç–æ—à–ª–∏? –ù–∞–¥–µ–µ–º—Å—è —Å –≤–∞–º–∏ –≤—Å—ë —Ö–æ—Ä–æ—à–æ ^^ –ú—ã –≤–∞—Å –æ—Ç–∫–ª—é—á–∏–º –æ—Ç "
                                     "—ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞ —á–µ—Ä–µ–∑ –ø–∞—Ä—É –º–∏–Ω—É—Ç.")
            await sleep(300)
            try:
                await member.move_to(None)
            except Exception as e:
                print(f"{__name__} Error: {e}")

        # —É–¥–∞–ª—è–µ–º –∫–∞–Ω–∞–ª
        if before.channel and before.channel.id in custom_rooms and before.channel.voice_states == {}:
            custom_rooms.pop(before.channel.id, custom_rooms[before.channel.id])
            try:
                await before.channel.delete(reason="[–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –ö–∞–Ω–∞–ª—ã] –ö–∞–Ω–∞–ª –ø—É—Å—Ç")
                return
            except Exception as e:
                print(f"{__name__} Error: {e}")

        # —Å–æ–∑–¥–∞—ë–º –∫–∞–Ω–∞–ª
        if after.channel and after.channel.id == voice_create_id:
            # –µ—Å–ª–∏ —é–∑–µ—Ä –≤ –∫—É–ª–¥–∞—É–Ω–¥–µ
            if is_cooldown(member.id, cooldown_create):
                cooldown = await cooldown_time(member.id, cooldown_create)
                await after.channel.send(
                    f"{member.mention}, –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —á–µ—Ä–µ–∑ {cooldown} —Å–µ–∫!",
                    delete_after=cooldown
                )
                # –≤—ã–∫–∏–Ω—É—Ç—å –∏–∑ –≤–æ–π—Å–∞
                await member.move_to(None)
                return

            # –µ—Å–ª–∏ —é–∑–µ—Ä –Ω–µ –≤ –∫—É–ª–¥–∞—É–Ω–¥–µ
            emoji_list = ["üëÄ", "üí≠", "‚ú®", "üåø", "üå†", "üéÜ", "üíû", "üö©", "üåà", "üçû", "üíÆ", "üé≤", "ü§ü",
                          "üåº", "üå†", "üéâ", "üéÇ", "üéÄ", "üéà", "üéÅ", "üé∂"]
            overwrites = {member: disnake.PermissionOverwrite(view_channel=True, manage_channels=True)}

            created_channel = await after.channel.guild.create_voice_channel(
                name=f"{member.display_name} {choice(emoji_list)}",
                reason="[–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –ö–∞–Ω–∞–ª—ã] –°–æ–∑–¥–∞–Ω–∏–µ",
                category=after.channel.category,
                position=after.channel.position + 1,
                overwrites=overwrites
            )
            # –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª –∏ –µ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è-—É—á–∞—Å—Ç–Ω–∏–∫–∞
            custom_rooms.update({created_channel.id: member.id, member.id: created_channel.id})
            # –ø–µ—Ä–µ–Ω–æ—Å–∏–º —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ –µ–≥–æ –∫–∞–Ω–∞–ª
            await sleep(1)

            try:
                await member.move_to(created_channel, reason="[–õ–∏—á–Ω—ã–µ –ö–∞–Ω–∞–ª—ã] –û–Ω —Å–æ–∑–¥–∞–ª —Å–≤–æ–π –∫–∞–Ω–∞–ª!")
                # –ø–æ–¥—Å–∫–∞–∑–∫–∞
                tip_embed = disnake.Embed(
                    title=f"–ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ:",
                    description="‚Ä¢ –í—ã–≥–Ω–∞—Ç—å –Ω–µ–ø—Ä–∏—Ç—è–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è! \n‚Ä¢ –°–¥–µ–ª–∞—Ç—å –∫–∞–Ω–∞–ª –ø—Ä–∏–≤–∞—Ç–Ω—ã–º, —á—Ç–æ–±—ã –Ω–∏–∫—Ç–æ –Ω–µ "
                                "–∑–∞—à—ë–ª! "
                )
                await created_channel.send(embed=tip_embed)
                # –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫—É–ª–¥–∞—É–Ω
                await add_cooldown(member.id, cooldown_create, 30)  # –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –ø–µ—Ä–µ–Ω–æ—Å–µ –≤ –∫–∞–Ω–∞–ª

            except disnake.errors.HTTPException:
                await created_channel.delete()
                # –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫—É–ª–¥–∞—É–Ω
                await add_cooldown(member.id, cooldown_create, 15)  # –ø—Ä–∏ –æ—à–∏–±–∫–µ –ø–µ—Ä–µ–Ω–æ—Å–∞

    @commands.Cog.listener("on_button_click")
    async def voices_buttons_listener(self, inter: disnake.MessageInteraction):
        if inter.component.custom_id and inter.component.custom_id.startswith("voice_name"):
            if inter.component.custom_id == "voice_name_talk":

                # –µ—Å–ª–∏ —é–∑–µ—Ä –≤ –∫—É–ª–¥–∞—É–Ω–¥–µ
                if is_cooldown(member.id, cooldown_name):
                    cooldown = await cooldown_time(member.id, cooldown_name)
                    embed = Embed(
                        title="–ò–∑–≤–µ–Ω–∏—Ç–µ, –Ω–æ..",
                        description=f"–í—ã –º–æ–∂–µ—Ç–µ –≤ —Ä—É—á–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞."
                                    f"–ë–æ—Ç —Å–º–æ–∂–µ—Ç —ç—Ç–æ —á–µ—Ä–µ–∑ {cooldown} —Å–µ–∫!"
                    ).set_footer(text="–≠—Ç–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ Discord (API)"),
                    await inter.response.send_message(embed=embed, ephemeral=True)
                    return

                # –µ—Å–ª–∏ —é–∑–µ—Ä –Ω–µ –≤ –∫—É–ª–¥–∞—É–Ω–¥–µ
                button = inter.component
                channel = await get_channel(inter.guild, inter.user.id)
                name = button.label
                await channel.edit(name=name)
                embed = disnake.Embed(title=f"–ù–∞–∑–≤–∞–Ω–∏–µ: {name}")
                await inter.response.edit_message(embed=embed)

        elif inter.component.custom_id and not inter.component.custom_id.startswith("limit"):
            pass

    @commands.Cog.listener("on_dropdown")
    async def voices_select_listener(self, inter: disnake.MessageInteraction):
        if inter.component.custom_id and inter.component.custom_id.startswith("voice_name"):
            try:
                channel = await get_channel(inter.guild, inter.user.id)
                name = inter.values[0]
                await channel.edit(name=name)
                embed = disnake.Embed(title=f"–ù–∞–∑–≤–∞–Ω–∏–µ: {name}")
                await inter.response.edit_message(embed=embed)

            except Exception as e:
                print(f"{__name__} Error: {e}")


def setup(bot: commands.Bot) -> None:
    bot.add_cog(VoiceCog(bot))
    print(f" + {__name__}")


def teardown(bot: commands.Bot) -> None:
    print(f" ‚Äì {__name__}")
