import disnake
from disnake.ext import commands
from disnake import ApplicationCommandInteraction

"""–í—ã –º–æ–∂–µ—Ç–µ —Å–≤–æ–±–æ–¥–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å, —É–±–∏—Ä–∞—Ç—å, –∏–∑–º–µ–Ω—è—Ç—å –ø—É–Ω–∫—Ç—ã –ø—Ä–∞–≤–∏–ª. –í —Ñ–æ—Ä–º–∞—Ç–µ:
"<–ù–æ–º–µ—Ä –ø—É–Ω–∫—Ç–∞>_–∑–∞–≥–æ–ª–æ–≤–æ–∫":"<–ó–∞–≥–æ–ª–æ–≤–æ–∫>"
"<–ù–æ–º–µ—Ä –ø—É–Ω–∫—Ç–∞>_—Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ":"<–¢–µ–∫—Å—Ç/—Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞>"""
rules_texts = {
    "1_–∑–∞–≥–æ–ª–æ–≤–æ–∫": "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ —ç—Ç–æ –º–µ—Å—Ç–æ –≤ —á–∏—Å—Ç–æ—Ç–µ. ",
    "1_—Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ": "–û–±—â–∞–π—Ç–µ—Å—å –±–µ–∑ –º–∞—Ç–∞. –ù–∏–∫–æ–≥–æ –Ω–µ –ø—Ä–∏–≤–æ—Ü–∏—Ä—É–π—Ç–µ –∏ –Ω–µ –æ—Å–∫–æ—Ä–±–ª—è–π—Ç–µ. "
                    "–ù–∏—á–µ–≥–æ –Ω–µ –ø–æ–ø—Ä–æ—à–∞–π–Ω–∏—á–∞–π—Ç–µ, –Ω–µ —Ä–µ–∫–ª–∞–º–∏—Ä—É–π—Ç–µ –∏ –Ω–µ –ø—Ä–æ–¥–∞–≤–∞–π—Ç–µ. "
                    "–¢–∞–∫–∂–µ –Ω–µ –Ω—É–∂–Ω–æ –≤—Å–µ—Ö –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –Ω–∞ —Å–≤–æ–π —Å–µ—Ä–≤–µ—Ä.",

    "2_–∑–∞–≥–æ–ª–æ–≤–æ–∫": "–û–±—â–∞–π—Ç–µ—Å—å —Ç–æ–ª—å–∫–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º.",
    "2_—Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ": "–≠—Ç–æ –Ω—É–∂–Ω–æ –≤ —Ü–µ–ª—è—Ö –º–æ–¥–µ—Ä–∞—Ü–∏–∏. "
                    "–¢–∞–∫–∂–µ, —ç—Ç–æ –Ω–µ —Å–µ—Ä–≤–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ - –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ <#610742443847057408>",

    "3_–∑–∞–≥–æ–ª–æ–≤–æ–∫": "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–∞–Ω–∞–ª—ã –ø–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—é.",
    "3_—Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ": "–ï—Å–ª–∏ —á—É–≤—Å—Ç–≤—É–µ—Ç–µ —Å–µ–±—è –ø–æ—Ç–µ—Ä—è–Ω–Ω—ã–º–∏ - —Å–ø—Ä–æ—Å–∏—Ç–µ —Ç–æ, —á—Ç–æ –≤—ã –∏—â–∏—Ç–µ.",

    "4_–∑–∞–≥–æ–ª–æ–≤–æ–∫": "–û—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à–∏ –Ω–∏–∫–Ω–µ–π–º—ã –ª–µ–≥–∫–æ —á–∏—Ç–∞–µ–º—ã–º–∏.",
    "4_—Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ": "–ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–¥–∏—Ä–æ–≤–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –∏–∑–º–µ–Ω—è—é—Ç —Ä–∞–∑–º–µ—Ä, –Ω–µ –¥–∞—é—Ç –µ–≥–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∏–ª–∏ —É–ø–æ–º—è–Ω—É—Ç—å.",

    "5_–∑–∞–≥–æ–ª–æ–≤–æ–∫": "–ë–µ–∑ —Ç—Ä–æ–ª–ª–∏–Ω–≥–∞.",
    "5_—Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ": "–¢—Ä–æ–ª–ª–∏–Ω–≥ - –Ω–∞–º–µ—Ä–µ–Ω–Ω–æ–µ, —è–≤–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Å —Ü–µ–ª—å—é –æ–ø–æ–∑–æ—Ä–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è.",

    "6_–∑–∞–≥–æ–ª–æ–≤–æ–∫": "–ù–∏–∫–∞–∫–æ–≥–æ –≤–∑—Ä–æ—Å–ª–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞.",
    "6_—Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ": "–ù–∏–∫–∞–∫–æ–≥–æ –≤–∑—Ä–æ—Å–ª–æ–≥–æ, –≤—ã–∑—ã–≤–∞—é—â–µ–≥–æ, —à–æ–∫–∏—Ä—É—é—â–µ–≥–æ, –æ—Ç—Ç–∞–ª–∫–∏–≤–∞—é—â–µ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞.",

    "7_–∑–∞–≥–æ–ª–æ–≤–æ–∫": "–£–≤–∞–∂–∞–π—Ç–µ –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.",
    "7_—Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ": "–ù–µ –º–µ—à–∞–π—Ç–µ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º. –ù–µ –≤–∫–ª—é—á–∞–π—Ç–µ –º—É–∑—ã–∫–∞–ª—å–Ω—ã—Ö –±–æ—Ç–æ–≤ –±–µ–∑ —Å–æ–≥–ª–∞—Å–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.",

    "8_–∑–∞–≥–æ–ª–æ–≤–æ–∫": "–ë—É–¥—å—Ç–µ –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã.",
    "8_—Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ": "–ù–µ –æ–±—Å—É–∂–¥–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª, –ø—Ä–∞–≤–∏–ª–∞ –∏–ª–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏. –ù–µ–¥–æ–ø—É—Å—Ç–∏–º–æ –Ω–∞—Ä—É—à–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∏–ª–∏ "
                    "–æ–±—Ö–æ–¥–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏.",

    "9_–∑–∞–≥–æ–ª–æ–≤–æ–∫": "–°–æ–±–ª—é–¥–∞–π—Ç–µ –£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏ –ü—Ä–∞–≤–∏–ª–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ Discord.",
    "9_—Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ": "–í–æ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ –Ω–∏—Ö: \n"
                    "**–ê.** –°–æ–±–ª—é–¥–∞–π—Ç–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Å 13-—Ç–∏ –ª–µ—Ç.\n"
                    "**–ë.** –ù–µ –≤—ã–¥–∞–≤–∞–π—Ç–µ —Å–µ–±—è –∑–∞ —á—É–∂–æ–µ –ª–∏—Ü–æ\n"
                    "**–í.** –ù–∏–∫–∞–∫–æ–π –Ω–µ—Ç–µ—Ä–ø–∏–º–æ—Å—Ç–∏ –∏–ª–∏ –ø—Ä–∏–Ω–∏–∂–µ–Ω–∏—è.\n"
                    "**–ì.** –ù–∏–∫–∞–∫–∏—Ö —á–∏—Ç–æ–≤, —Ö–∞–∫–æ–≤, –≤–∏—Ä—É—Å–æ–≤.\n"
                    "**–î.** –ù–∏–∫–∞–∫–æ–≥–æ –∫–æ—Å–≤–µ–Ω–Ω–æ–≥–æ –∏–ª–∏ –Ω–∞–≤–æ–¥—è—â–µ–≥–æ –Ω–∞ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è —É–≥—Ä–æ–∑—ã, —É–≥—Ä–æ–∑—ã –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ "
                    "—á—å–µ–π-–ª–∏–±–æ –ª–∏—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π (—Ç–∞–∫–∂–µ –∏–∑–≤–µ—Å—Ç–Ω–æ–π –∫–∞–∫ –¥–µ–∞–Ω–æ–Ω).\n"
                    "**–ï.** –ù–µ –æ–±—Ö–æ–¥–∏—Ç–µ –ª–∏—á–Ω—ã–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏. –ù–µ —Å—Ç–æ–∏—Ç —É–ø–æ–º–∏–Ω–∞—Ç—å –∏–ª–∏ –ø—Ä–µ—Å–ª–µ–¥–æ–≤–∞—Ç—å —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π —è–≤–Ω–æ "
                    "–¥–∞–ª –ø–æ–Ω—è—Ç—å, —á—Ç–æ –Ω–µ —Ö–æ—á–µ—Ç —Å –≤–∞–º–∏ —Å–≤—è–∑—ã–≤–∞—Ç—å—Å—è."
}
number_of_rules = round(len(rules_texts) / 2)
class Dropon(disnake.ui.StringSelect):
    def __init__(self):
        options = [
            disnake.SelectOption(
                label="Red", description="Your favourite colour is red", emoji="üü•"
            ),
            disnake.SelectOption(
                label="Green", description="Your favourite colour is green", emoji="üü©"
            ),
            disnake.SelectOption(
                label="Blue", description="Your favourite colour is blue", emoji="üü¶"
            ),
        ]
        super().__init__(
            placeholder="Choose your favourite colour...",
            min_values=1,
            max_values=1,
            options=options,
        )


    async def callback(self, inter: disnake.MessageInteraction):
        await inter.response.send_message(f"Your favourite colour is {self.values[0]}")


def convert_number(number: int) -> str:
    """–í–µ—Ä–Ω—É—Ç—å –∏–∑–º–µ–Ω—ë–Ω–Ω–æ–µ —á–∏—Å–ª–æ –≤ —Ä—É—Å—Å–∫–æ–π —Ä–µ—á–µ–≤–æ–π —Ñ–æ—Ä–º–µ."""
    if number in [1, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]:
        number = f"{number}-—ã–π"
        return number
    elif number in [2, 6, 7, 8]:
        number = f"{number}-–æ–π"
        return number
    elif number == 3:
        number = f"{number}-–∏–π"
        return number


class RulesCog(commands.Cog):

    def __init__(self, bot: commands.Bot):
        self.bot = bot

    @commands.Cog.listener()
    async def on_ready(self):
        print(f"{self.bot.user} | {__name__}")

    @commands.slash_command(name="–ø—Ä–∞–≤–∏–ª–∞-–ø—Ä–æ–µ–∫—Ç–∞")
    async def rule(self, inter: ApplicationCommandInteraction):
        pass

    @commands.slash_command(name="–ø—Ä–∞–≤–∏–ª–∞-discord")
    async def rules(self, inter: ApplicationCommandInteraction):
        await inter.response.send_message("–≤—ã–≤")

    Rules_clauses = {}
    for clause in range(1, number_of_rules + 1):
        clause_to_add = {f"{clause}. {rules_texts[str(clause) + '_–∑–∞–≥–æ–ª–æ–≤–æ–∫']}": clause}
        Rules_clauses.update(clause_to_add)
    Rules_clauses = commands.option_enum(Rules_clauses)

    @rule.sub_command(name="–æ—Ç–ø—Ä–∞–≤–∏—Ç—å")
    async def rule_clause(self, inter: ApplicationCommandInteraction, –ø—É–Ω–∫—Ç: Rules_clauses,
                          —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ: disnake.User = None):
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—É–Ω–∫—Ç –ø—Ä–∞–≤–∏–ª.

        Parameters
        ----------
        –ø—É–Ω–∫—Ç: –í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –ø—Ä–∞–≤–∏–ª –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.
        —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ: –ö—Ç–æ –¥–æ–ª–∂–µ–Ω –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —ç—Ç–æ –ø—Ä–∞–≤–∏–ª–æ?
        """
        clause = –ø—É–Ω–∫—Ç
        member = —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ
        clause_embed = disnake.Embed(
            title=f"{clause}. {rules_texts[str(clause) + '_–∑–∞–≥–æ–ª–æ–≤–æ–∫']}",
            description=rules_texts[str(clause) + '_—Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ']
        )#.set_footer(
        #    text=f"{convert_number(clause)} –ø—Ä–∞–≤–∏–ª–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞"
        #)
        if member is not None:
            await inter.response.send_message(content=f":wave: {member.mention}", embed=clause_embed)
        else:
            await inter.response.send_message(embed=clause_embed)


def setup(bot):
    bot.add_cog(RulesCog(bot))
    print(f" + {__name__}")


def teardown(bot):
    print(f" ‚Äì {__name__}")
