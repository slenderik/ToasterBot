# –≤—ã–∫–ª—é—á–∏—Ç—å NSFW, –æ—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç –≤–æ–π—Å–∞, —É–¥–∞–ª–∏—Ç—å –∏ —Å–æ–∑–¥–∞—Ç—å –≤–æ–π—Å
from asyncio import sleep, TimeoutError
from random import choice
from time import time
from disnake import SelectOption

import disnake
import asyncio
from disnake.ext import commands
from disnake.utils import get

voice_create_id = 997851742475669594
server_id = 823820166478823462
logo_url = "https://media.discordapp.net/attachments/925973441524424716/925973455919251536/logo_bread.png?width=473" \
           "&height=473 "

custom_rooms = {}


async def channel_name(name: str) -> str:
    """–í–µ—Ä–Ω—É—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ —Å —É—á—ë—Ç–æ–º —Ä–∞–∑–Ω—ã—Ö —à—Ç—É–∫."""
    if "üîû" in name:
        name = f"[üîû] {name}"
    return name


async def get_channel(guild: object, user_id: int) -> object | None:
    """–í–µ—Ä–Ω—É—Ç—å –∫–∞–Ω–∞–ª –∞–≤—Ç–æ—Ä–∞."""
    return get(guild.voice_channels, id=custom_rooms[user_id]) if custom_rooms.get(user_id, None) is not None else None


async def disable(self: object, button: disnake.ui.Button, inter: disnake.MessageInteraction):
    """–û—Ç–∫–ª—é—á–∏—Ç—å –Ω–∞–∂–∞—Ç—É—é –∫–Ω–æ–ø–∫—É."""
    # –≤–∫–ª—é—á–∞–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –≤ —Ç–æ–º –∂–µ —Ä—è–¥—É
    for child in self.children:
        if isinstance(child, disnake.ui.Button):
            if child.row == button.row:
                child.disabled = False
    # –≤—ã–∫–ª—é—á–∞–µ–º –Ω–∞–∂–∞—Ç—É—é –∫–Ω–æ–ø–∫—É
    button.disabled = True
    await inter.response.edit_message(view=self)


cooldowns = {}


async def cooldown_time(user_id: int) -> str:
    """"–í–µ—Ä–Ω—É—Ç—å –≤—Ä–µ–º—è –Ω–∞ –∫—É–ª–¥–∞—É–Ω."""
    if cooldowns.get(user_id, None) is not None:
        cooldown = str(cooldowns[user_id] - round(time()))
    else:
        cooldown = "0 UwU"
    return cooldown


async def is_cooldown(user_id: int) -> bool:
    """"–í–µ—Ä–Ω—É—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫—É–ª–¥–∞—É–Ω–µ."""
    return bool(cooldowns.get(user_id, None))


async def add_cooldown(user_id: int, time_: int = 30):
    """–î–æ–±–∞–≤–∏—Ç—å –≤ –∫—É–ª–¥–∞—É–Ω—ã –≤—Ä–µ–º—è –∫–æ–≥–¥–∞ —É—á–∞—Å—Ç–Ω–∏–∫ —Å–º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É —Å–Ω–æ–≤–∞."""
    cooldown: int = round(time())
    cooldown += time_  # –≤—Ä–µ–º—è –æ—Ç–∫–∞—Ç–∞/–∫—É–ª–¥–∞—É–Ω–∞
    cooldown = {user_id: cooldown}
    cooldowns.update(cooldown)
    await sleep(time_)
    cooldowns.pop(user_id)


class SettingsView(disnake.ui.View):

    def __init__(self):
        super().__init__(timeout=None)

    @disnake.ui.button(custom_id="voice_view:yes_profanity", emoji="üîû", label="–° –º–∞—Ç–æ–º", style=disnake.ButtonStyle.red,
                       row=2)
    async def yes_profanity(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        channel = await get_channel(inter.bot, inter.user)
        await channel.edit(name=f"[üîû] {channel.name}", reason="[–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –ö–∞–Ω–∞–ª—ã] –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
        await disable(self, button, inter)

    @disnake.ui.button(custom_id="voice_view:no_profanity", emoji="üîû", label="–ë–µ–∑ –º–∞—Ç–∞", style=disnake.ButtonStyle.red,
                       row=2)
    async def no_profanity(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        channel = await get_channel(inter.bot, inter.user)
        await channel.edit(name=channel.name[4:], nsfw=True, reason="[–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –ö–∞–Ω–∞–ª—ã] –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
        await disable(self, button, inter)

    @disnake.ui.button(custom_id="voice_view:unlock_channel", emoji="üîì", label="–û—Ç–∫—Ä—ã—Ç—å",
                       style=disnake.ButtonStyle.blurple,
                       row=3)
    async def unlock_channel(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        channel = await get_channel(inter.bot, inter.user)
        user = inter.user
        overwrites = {user: disnake.PermissionOverwrite(view_channel=True, manage_channels=True)}
        await channel.edit(overwrites=overwrites, reason="[–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –ö–∞–Ω–∞–ª—ã] –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
        await disable(self, button, inter)

    @disnake.ui.button(custom_id="voice_view:lock_channel", emoji="üîí", label="–ó–∞–∫—Ä—ã—Ç—å",
                       style=disnake.ButtonStyle.blurple, row=3)
    async def lock_channel(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        await disable(self, button, inter)


class LimitView(disnake.ui.View):

    def __init__(self):
        super().__init__(timeout=None)

    @disnake.ui.button(label="1", custom_id="limit:1", style=disnake.ButtonStyle.blurple)
    async def limit_1(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        channel = await get_channel(inter.guild, inter.user.id)
        await channel.edit(user_limit=button.label)
        await disable(self, button, inter)

    @disnake.ui.button(label="2", custom_id="limit:2", style=disnake.ButtonStyle.blurple)
    async def limit_2(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        channel = await get_channel(inter.guild, inter.user.id)
        await channel.edit(user_limit=button.label)
        await disable(self, button, inter)

    @disnake.ui.button(label="4", custom_id="limit:4", style=disnake.ButtonStyle.blurple)
    async def limit_4(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        channel = await get_channel(inter.guild, inter.user.id)
        await channel.edit(user_limit=button.label)
        await disable(self, button, inter)

    @disnake.ui.button(label="5", custom_id="limit:5", style=disnake.ButtonStyle.blurple)
    async def limit_5(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        channel = await get_channel(inter.guild, inter.user.id)
        await channel.edit(user_limit=button.label)
        await disable(self, button, inter)

    @disnake.ui.button(label="8", custom_id="limit:8", style=disnake.ButtonStyle.blurple)
    async def limit_8(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        channel = await get_channel(inter.guild, inter.user.id)
        await channel.edit(user_limit=button.label)
        await disable(self, button, inter)

    @disnake.ui.button(label="10", custom_id="limit:10", style=disnake.ButtonStyle.blurple)
    async def limit_10(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        channel = await get_channel(inter.guild, inter.user.id)
        await channel.edit(user_limit=button.label)
        await disable(self, button, inter)

    # TODO 4 5 6 10 self + -


class SelectServer(disnake.ui.Select):

    def __init__(self):
        options = [
            SelectOption(
                label="SkyWars ‚Ññ1",
                description="–ï—Å–ª–∏ —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å —Ç—É—Ç –∏–≥—Ä–∞—Ç—å",
                emoji="üü¶"
            ),
            disnake.SelectOption(
                label="SkyWars ‚Ññ2", description="–ï—Å–ª–∏ —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å —Ç—É—Ç –∏–≥—Ä–∞—Ç—å", emoji="üü¶"
            ),
            disnake.SelectOption(
                label="SkyWars ‚Ññ3", description="–ï—Å–ª–∏ —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å —Ç—É—Ç –∏–≥—Ä–∞—Ç—å", emoji="üü¶"
            ),
            disnake.SelectOption(
                label="BedWars ‚Ññ1", description="123", emoji="üü•"
            ),
            disnake.SelectOption(
                label="BedWars ‚Ññ2", description="321", emoji="üü•"
            ),
            disnake.SelectOption(
                label="BedWars ‚Ññ3", description="123231", emoji="üü•"
            ),
            disnake.SelectOption(
                label="Duels ‚Ññ1", description="", emoji="üü™"
            ),
            disnake.SelectOption(
                label="Murder Mystery ‚Ññ1", description="", emoji="üü®"
            ),
            disnake.SelectOption(
                label="Murder Mystery ‚Ññ2", description="", emoji="üü®"
            ),
            disnake.SelectOption(
                label="Survival ‚Ññ1", description="Your favourite colour is green", emoji="üü©"
            )
        ]

        super().__init__(
            placeholder="–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —Å–µ—Ä–≤–µ—Ä!",
            custom_id="select_server",
            max_values=1,
            row=1,
            options=options
        )

    async def callback(self, inter: disnake.MessageInteraction):
        try:
            print("1. –º—ã —Ç—É—Ç")
            channel = await get_channel(inter.guild, inter.user.id)
            print(f"2. {channel.name}")
            name = await channel_name(self.values[0])
            print(f"3. {name}")
            await channel.edit(name=name)
            print("4. —Ä–µ–Ω–µ–π–º")
            embed = disnake.Embed(title=f"–ù–∞–∑–≤–∞–Ω–∏–µ: {name}")
            print("5. –≤—Å—ë")
            await inter.response.edit_message(embed=embed)
        except Exception as e:
            print(e)


class NameView(disnake.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(SelectServer())

    # async def interaction_check(self, inter: disnake.MessageInteraction) -> bool:
    #     channel = await get_channel(inter.guild, inter.user.id)
    #
    #     if channel is None:  # —á–µ–ª–æ–≤–µ–∫ –Ω–µ —Å–æ–∑–¥–∞–≤–∞–ª –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª
    #         await inter.response.send_message(
    #             f"`1` –°–æ–∑–¥–∞–π—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–π, –∑–∞–π–¥—è –≤ <#{voice_create_id}>. \n"
    #             f"`2` –í–∞–º —Å–æ–∑–¥–∞–¥—É—Ç –∏ –ø–µ—Ä–µ–º–µ—Å—Ç—è—Ç –≤–∞—Å. \n"
    #             f"`3` –¢–æ–ª—å–∫–æ –Ω–∞—Ö–æ–¥—è—Å—å –≤ –Ω—ë–º, –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ!", ephemeral=True)
    #         return False
    #     elif channel is not None and inter.user.voice is not None:  # —Å–æ–∑–¥–∞–≤–∞–ª –∏ –≤ –≤–æ–π—Å–µ
    #
    #         if channel.id == inter.user.voice.channel.id:  # –≤ —Å–≤–æ—ë–º –≤–æ–π—Å–µ
    #             return True
    #
    #         else:  # –Ω–µ –≤ —Å–≤–æ—ë–º –≤–æ–π—Å–µ
    #             await inter.response.send_message(
    #                 f"–ó–∞–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª {channel.mention}, —á—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –µ–≥–æ!",
    #                 ephemeral=True)
    #             return False
    #
    #     elif channel is not None and inter.user.voice is None:  # —Å–æ–∑–¥–∞–≤–∞–ª –Ω–æ –Ω–µ –≤–æ–π—Å–µ
    #         await inter.response.send_message(
    #             f"–ó–∞–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª {channel.mention}, —á—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –µ–≥–æ!",
    #             ephemeral=True)
    #         return False

    @disnake.ui.button(label="–û–±—â–µ–Ω–∏–µ", custom_id="name:talk", style=disnake.ButtonStyle.green, row=0)
    async def talk(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        channel = await get_channel(inter.guild, inter.user.id)
        name = await channel_name(button.label)
        await channel.edit(name=name)
        await disable(self, button, inter)

    @disnake.ui.button(label="–ú—É–∑—ã–∫–∞", custom_id="name:music", style=disnake.ButtonStyle.green, row=0)
    async def music(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        channel = await get_channel(inter.guild, inter.user.id)
        name = await channel_name(button.label)
        await channel.edit(name=name)
        await disable(self, button, inter)

    @disnake.ui.button(label="–û—Ñ—Ñ—Ç–æ–ø", custom_id="name:offtop", style=disnake.ButtonStyle.green, row=0)
    async def offtop(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        channel = await get_channel(inter.guild, inter.user.id)
        name = await channel_name(button.label)
        await channel.edit(name=name)
        await disable(self, button, inter)

    @disnake.ui.button(label="–í–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ", custom_id="name:custom", style=disnake.ButtonStyle.gray, row=2)
    async def custom_name(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        await inter.response.send_modal(
            title="–õ–∏—á–Ω—ã–µ –∫–∞–Ω–∞–ª—ã",
            custom_id="custom_name",
            components=[disnake.ui.TextInput(
                label="–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ",
                placeholder="–í–≤–µ–¥–∏—Ç–µ –∑–¥–µ—Å—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞",
                custom_id="name",
                max_length=25,
            )],
        )
        try:
            modal_inter: disnake.ModalInteraction = await inter.bot.wait_for(
                "modal_submit",
                check=lambda i: i.custom_id == "custom_name" and i.author.id == inter.author.id
            )
        except TimeoutError:
            return

        name = await channel_name(modal_inter.text_values["name"])
        channel = await get_channel(inter.guild, inter.user.id)
        await channel.edit(name=name)
        embed = disnake.Embed(title=f"–ù–∞–∑–≤–∞–Ω–∏–µ: {name}")
        await modal_inter.response.edit_message(embed=embed)


class VoiceView(disnake.ui.View):

    def __init__(self):
        super().__init__(timeout=None)

    async def interaction_check(self, inter: disnake.MessageInteraction) -> bool:
        channel = await get_channel(inter.guild, inter.user.id)

        if channel is None:  # —á–µ–ª–æ–≤–µ–∫ –Ω–µ —Å–æ–∑–¥–∞–≤–∞–ª –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª
            await inter.response.send_message(
                f"`1` –°–æ–∑–¥–∞–π—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–π, –∑–∞–π–¥—è –≤ <#{voice_create_id}>. \n"
                f"`2` –í–∞–º —Å–æ–∑–¥–∞–¥—É—Ç –∏ –ø–µ—Ä–µ–º–µ—Å—Ç—è—Ç –≤–∞—Å. \n"
                f"`3` –¢–æ–ª—å–∫–æ –Ω–∞—Ö–æ–¥—è—Å—å –≤ –Ω—ë–º, –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ!", ephemeral=True)
            return False
        elif channel is not None and inter.user.voice is not None:  # —Å–æ–∑–¥–∞–≤–∞–ª –∏ –≤ –≤–æ–π—Å–µ

            if channel.id == inter.user.voice.channel.id:  # –≤ —Å–≤–æ—ë–º –≤–æ–π—Å–µ
                return True

            else:  # –Ω–µ –≤ —Å–≤–æ—ë–º –≤–æ–π—Å–µ
                await inter.response.send_message(
                    f"–ó–∞–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª {channel.mention}, —á—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –µ–≥–æ!",
                    ephemeral=True)
                return False

        elif channel is not None and inter.user.voice is None:  # —Å–æ–∑–¥–∞–≤–∞–ª –Ω–æ –Ω–µ –≤–æ–π—Å–µ
            await inter.response.send_message(
                f"–ó–∞–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª {channel.mention}, —á—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –µ–≥–æ!",
                ephemeral=True)
            return False

    @disnake.ui.button(custom_id="voice_view:name", label="–ù–∞–∑–≤–∞–Ω–∏–µ", style=disnake.ButtonStyle.blurple)
    async def name(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        channel = await get_channel(inter.guild, inter.user.id)
        embed = disnake.Embed(title=f"–ù–∞–∑–≤–∞–Ω–∏–µ: {channel.name}")
        await inter.response.send_message(embed=embed, view=NameView(), ephemeral=True)

    @disnake.ui.button(custom_id="voice_view:limit", label="–†–∞–∑–º–µ—Ä", style=disnake.ButtonStyle.blurple)
    async def limit(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        await inter.response.send_message(view=LimitView(), ephemeral=True)


class VoiceCog(commands.Cog):
    """
    –í—Å—ë —á—Ç–æ —Å–≤—è–∑–∞–Ω–æ —Å –≤–æ–π—Å–∞–º–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!
    –§: –≤—ã–∫–ª—é—á–∏—Ç—å NSFW, –æ—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç –≤–æ–π—Å–∞, —É–¥–∞–ª–∏—Ç—å –∏ —Å–æ–∑–¥–∞—Ç—å –≤–æ–π—Å
    """

    def __init__(self, bot: commands.Bot):
        self.bot = bot
        self.views_added = False

    @commands.Cog.listener()
    async def on_ready(self):
        if not self.views_added:
            self.bot.add_view(VoiceView())
            self.bot.add_view(NameView())
            self.bot.add_item(SelectServer())
            self.bot.views_added = True

        print(f"{self.bot.user} | {__name__}")

    @commands.command(name="–≥—Å")
    @commands.has_role(977974127304515614)
    async def voice_settings(self, ctx: commands.Context):
        embed = disnake.Embed(
            title="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–æ–æ–ª–æ–≤—ã–º –∫–∞–Ω–∞–ª–æ–º",
            description="–¢–£–¢ –ù–ê–°–¢–†–û–ô–ö–ò, –ù–ê–°–¢–†–ê–ò–í–ê–¢–¨ –ù–ê–î–û"
        )
        await ctx.send(embed=embed, view=VoiceView())

    # TODO —Ç—É–∫-—Ç—É–∫, –∫ –≤–∞–º —Ö–æ—á–µ—Ç –∑–∞–π—Ç–∏ @—á–µ–ª–æ–≤–∫–µ–∫

    @commands.Cog.listener()
    async def on_voice_state_update(self, member, before, after):
        """"–°–æ–∑–¥–∞—Ç—å, —É–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª"""
        # E—Å–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫ –∑–∞—à—ë–ª/–ø–µ—Ä–µ—à—ë–ª/–≤—ã—à–µ–ª.
        # before.channel = None - –∑–∞—à–µ–ª –≤ –≥—Å —Å–µ—Ä–≤–µ—Ä–∞
        # after.channel = None - –≤—ã—à–µ–ª —Å –≥—Å —Å–µ—Ä–≤–µ—Ä–∞

        # –≤—ã–∫–ª—é—á–∏—Ç—å NSFW
        if before.channel and before.channel.voice_states == {} and before.channel.is_nsfw():
            try:
                await before.channel.edit(nsfw=False, reason="–ö–∞–Ω–∞–ª –ø—É—Å—Ç–æ–π, –∑–∞—á–µ–º –µ–≥–æ –æ—Å—Ç–∞–≤–ª—è—Ç—å —Å –º–∞—Ç–æ–º?")
            except Exception as e:
                print(e)

        # –æ—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç
        if before.channel and before.channel.voice_states == {} and before.channel.id not in custom_rooms \
                and before.channel.id != voice_create_id:
            try:
                await before.channel.purge(limit=None)
            except Exception as e:
                print(e)

        # —É–¥–∞–ª—è–µ–º –∫–∞–Ω–∞–ª
        if before.channel and before.channel.id in custom_rooms and before.channel.voice_states == {}:
            custom_rooms.pop(before.channel.id, custom_rooms[before.channel.id])
            try:
                await before.channel.delete(reason="[–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –ö–∞–Ω–∞–ª—ã] –ö–∞–Ω–∞–ª –ø—É—Å—Ç")
            except Exception as e:
                print(e)

        if after.channel and after.channel.id == voice_create_id:
            # —Å–æ–∑–¥–∞—ë–º –∫–∞–Ω–∞–ª
            in_cooldown = await is_cooldown(member.id)
            if in_cooldown:
                # –µ—Å–ª–∏ —é–∑–µ—Ä –≤ –∫—É–ª–¥–∞—É–Ω–¥–µ
                await after.channel.send(
                    f"{member.mention}, –ò—Å–æ–ª—å–∑—É–π—Ç–µ —á–µ—Ä–µ–∑ {await cooldown_time(member.id)} —Å–µ–∫!",
                    delete_after=15
                )
                await member.move_to(None)
            else:
                # –µ—Å–ª–∏ —é–∑–µ—Ä –Ω–µ –≤ –∫—É–ª–¥–∞—É–Ω–¥–µ
                emoji_list = ["üëÄ", "üí≠", "‚ú®", "üåø", "üå†", "üéÜ", "üíû", "üö©", "üåà", "üçû", "üíÆ", "üé≤", "ü§ü",
                              "üåº", "üå†", "üéâ", "üéÇ", "üéÄ", "üéà", "üéÅ", "üé∂"]
                created_channel = await after.channel.guild.create_voice_channel(
                    name=f"{member.display_name} {choice(emoji_list)}",
                    reason="[–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –ö–∞–Ω–∞–ª—ã] –°–æ–∑–¥–∞–Ω–∏–µ",
                    category=after.channel.category,
                    position=after.channel.position + 1,
                    overwrites={member: disnake.PermissionOverwrite(view_channel=True, manage_channels=True)}
                )

                # –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª –∏ –µ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è-—É—á–∞—Å—Ç–Ω–∏–∫–∞
                custom_rooms.update({created_channel.id: member.id, member.id: created_channel.id})

                # –ø–µ—Ä–µ–Ω–æ—Å–∏–º —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ –µ–≥–æ –∫–∞–Ω–∞–ª
                await sleep(2)
                try:
                    await member.move_to(created_channel, reason="[C–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –ö–∞–Ω–∞–ª—ã] –û–Ω —Å–æ–∑–¥–∞–ª —Å–≤–æ–π –∫–∞–Ω–∞–ª!")

                    # –ø–æ–¥—Å–∫–∞–∑–∫–∞
                    tip_embed = disnake.Embed(
                        title=f"–ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ:",
                        description="‚Ä¢ –í—ã–≥–Ω–∞—Ç—å –Ω–µ–ø—Ä–∏—Ç—è–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è! \n‚Ä¢ –°–¥–µ–ª–∞—Ç—å –∫–∞–Ω–∞–ª –ø—Ä–∏–≤–∞—Ç–Ω—ã–º, —á—Ç–æ–±—ã –Ω–∏–∫—Ç–æ –Ω–µ "
                                    "–∑–∞—à—ë–ª! "
                    )
                    await created_channel.send(embed=tip_embed)

                    # –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫—É–ª–¥–∞—É–Ω
                    await add_cooldown(member.id, 30)

                except disnake.errors.HTTPException:
                    await created_channel.delete()

                    # –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫—É–ª–¥–∞—É–Ω
                    await add_cooldown(member.id, 15)


def setup(bot: commands.Bot) -> None:
    bot.add_cog(VoiceCog(bot))
    print(f" + {__name__}")


def teardown(bot: commands.Bot) -> None:
    print(f" ‚Äì {__name__}")
