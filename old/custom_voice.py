from time import time
import disnake
from random import choice
from asyncio import sleep
from disnake.utils import get
from disnake.ext import commands

# —Ç—É–∫-—Ç—É–∫
# –∫ –≤–∞–º —Ö–æ—á–µ—Ç –∑–∞–π—Ç–∏ @—á–µ–ª–æ–≤–∫–µ

chat_id = 823820166478823464
voice_create_id = 879387831385088020
server_id = 823820166478823462
logo_url = "https://media.discordapp.net/attachments/925973441524424716/925973455919251536/logo_bread.png?width=473&height=473"


# inter.bot self.bot
# inter.user member
async def get_channel_by_id(bot, user) -> object:
    """–í–µ—Ä–Ω—É—Ç—å –∫–∞–Ω–∞–ª–∞ –∞–≤—Ç–æ—Ä–∞."""
    server = bot.get_guild(server_id)
    owner_channel = custom_rooms[user.id]
    channel = get(server.voice_channels, id=owner_channel)
    return channel


async def disable(self, button, inter):
    """–û—Ç–∫–ª—é—á–∏—Ç—å –Ω–∞–∂–∞—Ç—É—é –∫–Ω–æ–ø–∫—É."""
    #–≤–∫–ª—é—á–∞–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –≤ —Ç–æ–º –∂–µ —Ä—è–¥—É
    for child in self.children:
        if isinstance(child, disnake.ui.Button):
            if child.row == button.row:
                child.disabled = False
    # –í—ã–∫–ª—é—á–∞–µ–º –Ω–∞–∂–∞—Ç—É—é –∫–Ω–æ–ø–∫—É
    button.disabled = True
    await inter.response.edit_message(view=self)


custom_rooms = {}


async def channel_name(name):
    """–í–µ—Ä–Ω—É—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ —Å —É—á—ë—Ç–æ–º —Ä–∞–∑–Ω—ã—Ö —à—Ç—É–∫."""
    print(f"1. {name}")
    if "üîû" in name:
        print(name)
        name = f"[üîû] {name}"
    print(f"2. {name}")
    return name

class VoiceView(disnake.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @disnake.ui.button(
        label="–û–±—â–µ–Ω–∏–µ",
        style=disnake.ButtonStyle.green,
        custom_id="voice_view:talk",
        row=0
    )
    async def talk(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        channel = await get_channel(inter.bot, inter.user)
        name = await channel_name(button.label)
        await channel.edit(name=name, reason="[–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –ö–∞–Ω–∞–ª—ã] –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
        await disable(self, button, inter)

    @disnake.ui.button(
        label="–ú—É–∑—ã–∫–∞",
        style=disnake.ButtonStyle.green,
        custom_id="voice_view:music",
        row=0
    )
    async def music(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        channel = await get_channel(inter.bot, inter.user)
        name = await channel_name(button.label)
        await channel.edit(name=name, reason="[–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –ö–∞–Ω–∞–ª—ã] –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
        await disable(self, button, inter)

    @disnake.ui.button(
        label="–û—Ñ—Ñ—Ç–æ–ø",
        style=disnake.ButtonStyle.green,
        custom_id="voice_view:offtop",
        row=0
    )
    async def offtop(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        channel = await get_channel(inter.bot, inter.user)
        name = await channel_name(button.label)
        await channel.edit(name=name, reason="[–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –ö–∞–Ω–∞–ª—ã] –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
        await disable(self, button, inter)

    @disnake.ui.button(
        label="SkyWars",
        style=disnake.ButtonStyle.blurple,
        custom_id="voice_view:skywars",
        row=1
    )
    async def skywars(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        channel = await get_channel(inter.bot, inter.user)
        name = await channel_name(button.label)
        await channel.edit(name=name, reason="[–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –ö–∞–Ω–∞–ª—ã] –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
        await disable(self, button, inter)

    @disnake.ui.button(
        label="BedWars",
        style=disnake.ButtonStyle.blurple,
        custom_id="voice_view:blurple",
        row=1
    )
    async def bedwars(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        channel = await get_channel(inter.bot, inter.user)
        name = await channel_name(button.label)
        await channel.edit(name=name, reason="[–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –ö–∞–Ω–∞–ª—ã] –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
        await disable(self, button, inter)

    @disnake.ui.button(
        label="Survival",
        style=disnake.ButtonStyle.blurple,
        custom_id="voice_view:survival",
        row=1
    )
    async def survival(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        channel = await get_channel(inter.bot, inter.user)
        name = await channel_name(button.label)
        await channel.edit(name=name, reason="[–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –ö–∞–Ω–∞–ª—ã] –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
        await disable(self, button, inter)

    @disnake.ui.button(
        label="MurderMustery",
        style=disnake.ButtonStyle.blurple,
        custom_id="voice_view:murdermustery",
        row=1
    )
    async def murdermustery(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        channel = await get_channel(inter.bot, inter.user)
        name = await channel_name(button.label)
        await channel.edit(name=name, reason="[–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –ö–∞–Ω–∞–ª—ã] –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
        await disable(self, button, inter)

    @disnake.ui.button(
        label="–° –º–∞—Ç–æ–º",
        emoji="üîû",
        style=disnake.ButtonStyle.red,
        custom_id="voice_view:yes_profanity",
        row=2
    )
    async def yes_profanity(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        channel = await get_channel(inter.bot, inter.user)
        await channel.edit(name=f"[üîû] {channel.name}", reason="[–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –ö–∞–Ω–∞–ª—ã] –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
        await disable(self, button, inter)

    @disnake.ui.button(
        label="–ë–µ–∑ –º–∞—Ç–∞",
        style=disnake.ButtonStyle.red,
        custom_id="voice_view:no_profanity",
        row=2
    )
    async def no_profanity(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        channel = await get_channel(inter.bot, inter.user)
        await channel.edit(name=channel.name[4:], nsfw=True, reason="[–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –ö–∞–Ω–∞–ª—ã] –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
        await disable(self, button, inter)

    @disnake.ui.button(
        label="–û—Ç–∫—Ä—ã—Ç—å",
        emoji="üîì",
        style=disnake.ButtonStyle.blurple,
        custom_id="voice_view:unlock_channel",
        row=3
    )
    async def unlock_channel(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        channel = await get_channel(inter.bot, inter.user)
        user = inter.user
        overwrites = {user: disnake.PermissionOverwrite(view_channel=True, manage_channels=True)}
        await channel.edit(overwrites=overwrites, reason="[–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –ö–∞–Ω–∞–ª—ã] –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
        await disable(self, button, inter)

    @disnake.ui.button(
        label="–ó–∞–∫—Ä—ã—Ç—å",
        emoji="üîí",
        style=disnake.ButtonStyle.blurple,
        custom_id="voice_view:lock_channel",
        row=3
    )
    async def lock_channel(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        await disable(self, button, inter)

    @disnake.ui.button(
        label="2",
        style=disnake.ButtonStyle.blurple,
        custom_id="voice_view:user_limit_two",
        row=4
    )
    async def user_limit_two(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        await disable(self, button, inter)

    @disnake.ui.button(
        label="4",
        style=disnake.ButtonStyle.blurple,
        custom_id="voice_view:user_limit_four",
        row=4
    )
    async def user_limit_four(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        await disable(self, button, inter)

    @disnake.ui.button(
        label="5",
        style=disnake.ButtonStyle.blurple,
        custom_id="voice_view:user_limit_five",
        row=4
    )
    async def user_limit_five(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        await disable(self, button, inter)

    @disnake.ui.button(
        label="6",
        style=disnake.ButtonStyle.blurple,
        custom_id="voice_view:user_limit_six",
        row=4
    )
    async def user_limit_six(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        await disable(self, button, inter)

    @disnake.ui.button(
        label="10",
        style=disnake.ButtonStyle.blurple,
        custom_id="voice_view:user_limit_ten",
        row=4
    )
    async def user_limit_ten(self, button: disnake.ui.Button, inter: disnake.MessageInteraction):
        await disable(self, button, inter)


cooldowns = {}


async def cooldown_time(member_id) -> str:
    """"–í–µ—Ä–Ω—É—Ç—å –≤—Ä–µ–º—è –Ω–∞ –∫—É–ª–¥–∞—É–Ω."""
    if cooldowns.get(member_id) is not None:
        cooldown_time = str(cooldowns[member_id] - round(time()))
        return cooldown_time
    else:
        cooldown_time = "0 UwU"
        return cooldown_time


async def is_cooldown(member_id) -> bool:
    """"–í–µ—Ä–Ω—É—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫—É–ª–¥–∞—É–Ω–µ."""
    if cooldowns.get(member_id) is not None:
        return True
    else:
        return False


async def add_cooldown(member_id):
    """–î–æ–±–∞–≤–∏—Ç—å –≤ –∫—É–ª–¥–∞—É–Ω—ã –≤—Ä–µ–º—è –∫–æ–≥–¥–∞ —É—á–∞—Å—Ç–Ω–∏–∫ —Å–º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É —Å–Ω–æ–≤–∞."""
    cooldown = round(time())
    cooldown += 30  #–≤—Ä–µ–º—è –æ—Ç–∫–∞—Ç–∞/–∫—É–ª–¥–∞—É–Ω–∞
    cooldown_time = {member_id: cooldown}
    cooldowns.update(cooldown_time)
    await sleep(30)
    cooldowns.pop(member_id)


class VoiceCog(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot
        self.voice_views_added = False

    @commands.Cog.listener()
    async def on_ready(self):
        if not self.voice_views_added:
            self.bot.add_view(VoiceView())
            self.bot.voice_views_added = True

        print(f"{self.bot.user} | {__name__}")

    @commands.Cog.listener()
    async def on_voice_state_update(self, member, before, after):
        """"–°–æ–∑–¥–∞—Ç—å, —É–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª –∏ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
        #E—Å–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫ –∑–∞—à—ë–ª/–ø–µ—Ä–µ—à—ë–ª/–≤—ã—à–µ–ª.
        #before.channel = None - –∑–∞—à–µ–ª –≤ –≥—Å —Å–µ—Ä–≤–µ—Ä–∞
        #after.channel = None - –≤—ã—à–µ–ª —Å –≥—Å —Å–µ—Ä–≤–µ—Ä–∞

        print(member.name)
        print(before.channel)
        print(after.channel)

        if before.channel != None and before.channel.id in custom_rooms and before.channel.voice_states == {}:
            channel_id = before.channel.id
            owner_id = custom_rooms[before.channel.id]
            server = self.bot.get_guild(server_id)
            owner_user = await server.fetch_member(owner_id)

            #—É–¥–∞–ª—è–µ–º –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑ –õ–°
            x = f"{before.channel.id}-1"
            print(f"id: {x}")
            message_id = custom_rooms.get(x)
            print(message_id)
            if message_id != None:
                user_dm = await owner_user.create_dm()
                message = await user_dm.fetch_message(message_id)
                await message.delete()


            #–ø–∏—à–µ–º —Å–æ–∑–¥–∞—Ç–µ–ª—é –æ —É–¥–∞–ª–µ–Ω–∏–∏
            await send_to_dm(
                user=owner_user,
                guild=before.channel.guild,
                text="–í–∞—à –∫–∞–Ω–∞–ª —É–¥–∞–ª—ë–Ω",
                deleting=15
            )
            #—É–¥–∞–ª—è–µ–º –∫–∞–Ω–∞–ª
            print('1')
            custom_rooms.pop(owner_id, message_id);
            print('2')
            custom_rooms.pop(channel_id)
            print('3')
            await before.channel.delete(reason="[–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –ö–∞–Ω–∞–ª—ã] –ö–∞–Ω–∞–ª –ø—É—Å—Ç")
            print('4')


        if after.channel != None and after.channel.id == voice_create_id:
            in_cooldown = await is_cooldown(member.id)
            if in_cooldown:
                #–µ—Å–ª–∏ —é–∑–µ—Ä –≤ –∫—É–ª–¥–∞—É–Ω–¥–µ
                await send_to_dm(
                    guild=after.channel.guild,
                    user=member,
                    text=f"–ò—Å–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É —á–µ—Ä–µ–∑ {await cooldown_time(member.id)} —Å–µ–∫.",
                    deleting=15
                )
            else:
                #—Å–æ–∑–¥–∞—ë–º –∫–∞–Ω–∞–ª
                emoji_list = ["üëÄ", "üí≠", "‚ú®", "üåø", "üå†", "üéÜ", "üíû", "üö©", "üåà", "üçû", "üíÆ", "üé≤", "ü§ü",
                              "üåº", "üå†", "üéâ", "üéÇ", "üéÄ", "üéà", "üéÅ", "üé∂"]
                overwrites = {member: disnake.PermissionOverwrite(view_channel=True, manage_channels=True)}

                created_channel = await after.channel.guild.create_voice_channel(
                    name=f"{member.display_name}{choice(emoji_list)}",
                    reason="[–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –ö–∞–Ω–∞–ª—ã] –°–æ–∑–¥–∞–Ω–∏–µ",
                    category=after.channel.category,
                    position=after.channel.position + 1,
                    overwrites=overwrites
                )

                #–¥–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª –∏ –µ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è-—É—á–∞—Å—Ç–Ω–∏–∫–∞
                new_channel = {created_channel.id: member.id, member.id: created_channel.id}
                custom_rooms.update(new_channel)

                #–ø–µ—Ä–µ–Ω–æ—Å–∏–º —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ –µ–≥–æ –∫–∞–Ω–∞–ª
                await sleep(2)
                await member.move_to(created_channel, reason="[C–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –ö–∞–Ω–∞–ª—ã] –û–Ω —Å–æ–∑–¥–∞–ª —Å–≤–æ–π –∫–∞–Ω–∞–ª!")

                #–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                control_panel_embed = disnake.Embed(
                    title=f"<:Breadix:940540206866628641> | –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è",
                    description=f"""–í—ã —Å–æ–∑–¥–∞–ª–∏ –∫–∞–Ω–∞–ª, –Ω–∞–∑–≤–∞–Ω–∏–µ: `{created_channel.name}`
                                    –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ:
                                    * –ó–∞–∫—Ä—ã—Ç—å –∫–∞–Ω–∞–ª (–ù–∏–∫—Ç–æ –Ω–µ —Å–º–æ–∂–µ—Ç –∑–∞–π—Ç–∏) `/–ø—Ä–∏–≤–∞—Ç-–∫–∞–Ω–∞–ª –∑–∞–∫—Ä—ã—Ç—å`
                                      * –û—Ç–∫—Ä—ã—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –æ–ø—Ä–µ–¥. —á–µ–ª–æ–≤–µ–∫–∞ `/–ø—Ä–∏–≤–∞—Ç-–∫–∞–Ω–∞–ª —Ä–∞–∑—Ä–µ—à–∏—Ç—å-–¥–ª—è [—á–µ–ª–æ–≤–µ–∫]`
                                      * –û—Ç–∫—Ä—ã—Ç—å –∫–∞–Ω–∞–ª, –≤—Å–µ –∫—Ä–æ–º–µ –∑–∞–ø—Ä–µ—â—ë—ë–Ω—ã—Ö —Å–º–æ–≥—É—Ç –∑–∞–π—Ç–∏ `/–ø—Ä–∏–≤–∞—Ç-–∫–∞–Ω–∞–ª –æ—Ç–∫—Ä—ã—Ç—å—Ñ`
                                    * –í—ã–∫–∏–Ω—É—Ç—å –∏ –∑–∞–ø—Ä–µ—Ç–∏—Ç—å –∑–∞—Ö–æ–¥–∏—Ç—å –∫ –≤–∞–º (–æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–º–æ–≥–Ω—É—Ç) `/–ø—Ä–∏–≤–∞—Ç-–∫–∞–Ω–∞–ª –≤—ã–∫–∏–Ω—É—Ç—å [—á–µ–ª–æ–≤–µ–∫]`
                                """
                )
                #control_panel_embed.set_thumbnail(url=logo_url)
                control_panel_embed.set_footer(text="–í–æ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")

                try:
                    dm_member = await member.create_dm()
                    control_panel_message = await dm_member.send(embed=control_panel_embed, view=VoiceView())
                    control_message = {f"{created_channel.id}-1": control_panel_message.id}
                    custom_rooms.update(control_message)
                except:
                    await send_instruction(guild=after.channel.guild, user=member)

                await add_cooldown(member.id)


def setup(bot):
    bot.add_cog(VoiceCog(bot))
    print(f" + {__name__}")


def teardown(bot):
    print(f" ‚Äì {__name__}")
